// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AzureCredentials azure credentials
//
// swagger:model azure_credentials
type AzureCredentials struct {

	// client id
	// Min Length: 8
	ClientID string `json:"client_id,omitempty"`

	// client secret
	// Min Length: 8
	ClientSecret string `json:"client_secret,omitempty"`

	// id
	// Min Length: 1
	ID string `json:"id,omitempty"`

	// subscription id
	// Min Length: 8
	SubscriptionID string `json:"subscription_id,omitempty"`

	// tenant id
	// Min Length: 8
	TenantID string `json:"tenant_id,omitempty"`
}

// Validate validates this azure credentials
func (m *AzureCredentials) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClientID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateClientSecret(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubscriptionID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTenantID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AzureCredentials) validateClientID(formats strfmt.Registry) error {
	if swag.IsZero(m.ClientID) { // not required
		return nil
	}

	if err := validate.MinLength("client_id", "body", m.ClientID, 8); err != nil {
		return err
	}

	return nil
}

func (m *AzureCredentials) validateClientSecret(formats strfmt.Registry) error {
	if swag.IsZero(m.ClientSecret) { // not required
		return nil
	}

	if err := validate.MinLength("client_secret", "body", m.ClientSecret, 8); err != nil {
		return err
	}

	return nil
}

func (m *AzureCredentials) validateID(formats strfmt.Registry) error {
	if swag.IsZero(m.ID) { // not required
		return nil
	}

	if err := validate.MinLength("id", "body", m.ID, 1); err != nil {
		return err
	}

	return nil
}

func (m *AzureCredentials) validateSubscriptionID(formats strfmt.Registry) error {
	if swag.IsZero(m.SubscriptionID) { // not required
		return nil
	}

	if err := validate.MinLength("subscription_id", "body", m.SubscriptionID, 8); err != nil {
		return err
	}

	return nil
}

func (m *AzureCredentials) validateTenantID(formats strfmt.Registry) error {
	if swag.IsZero(m.TenantID) { // not required
		return nil
	}

	if err := validate.MinLength("tenant_id", "body", m.TenantID, 8); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this azure credentials based on context it is used
func (m *AzureCredentials) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AzureCredentials) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureCredentials) UnmarshalBinary(b []byte) error {
	var res AzureCredentials
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
