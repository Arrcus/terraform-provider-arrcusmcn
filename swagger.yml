---
swagger: "2.0"
info:
  description: Arrcus Orchestrator
  title: Arc Orch
  version: 1.0.0
consumes: [application/json]
produces: [application/json]
schemes:
  - http
basePath: /api/v1
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /login:
    post:
      description: 'Returns token for authorized User'
      tags: [users]
      operationId: Login
      consumes:
        - "application/json"
      parameters:
        - name: 'login'
          in: 'body'
          required: true
          description: 'Login Payload'
          schema:
            $ref: '#/definitions/login_request'
        - name: tenant
          in: query
          required: true
          type: string
      responses:
        200:
          description: Successful login
          schema:
            $ref: '#/definitions/login_response'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /passwords:
    post:
      description: 'Change password for an authorized User'
      tags: [password]
      operationId: Change
      consumes:
        - "application/json"
      parameters:
        - name: 'changerequest'
          in: 'body'
          required: true
          description: 'Password change Payload'
          schema:
            $ref: '#/definitions/password_change_request'
        - name: tenant
          in: query
          required: true
          type: string
      responses:
        200:
          description: Successful login
          schema:
            $ref: '#/definitions/password_change_response'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'

  /tenants/:
    post:
      tags: [tenants]
      operationId: createTenant
      parameters:
        - name: tenant
          in: body
          schema:
            $ref: "#/definitions/tenant"
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/tenant"
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    get:
      tags: [tenants]
      operationId: listTenants
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
      security:
        - Bearer: []
      responses:
        200:
          description: list the all the tenants
          schema:
            type: array
            items:
              $ref: '#/definitions/tenant'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /tenants/{id}:
    get:
      tags: [tenants]
      operationId: describeTenants
      parameters:
        - name: id
          in: path
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/tenant"
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags: [tenants]
      operationId: deleteTenant
      parameters:
        - name: id
          in: path
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        204:
          description: Deleted
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /users/:
    post:
      description: 'Create a new user'
      tags: [users]
      operationId: createUser
      consumes:
        - 'application/json'
      parameters:
        - name: user
          in: body
          required: true
          description: 'Registration payload'
          schema:
            $ref: '#/definitions/user'
        - name: tenant
          in: query
          required: true
          type: string
      responses:
        200:
          description: Successful registration
          schema:
            $ref: '#/definitions/user'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    get:
      tags: [users]
      operationId: listUsers
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list the all the users
          schema:
            type: array
            items:
              $ref: '#/definitions/user'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /users/{id}:
    put:
      tags: [users]
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: user
          in: body
          schema:
            $ref: "#/definitions/user"
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/user"
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    get:
      tags: [users]
      operationId: describeUsers
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/user"
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags: [users]
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        204:
          description: Deleted
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /certificates:
    get:
      tags: [certificates]
      operationId: listCertificates
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 1
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: List the certificates
          schema:
            type: array
            items:
              $ref: '#/definitions/certificates'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
    post:
      tags: [certificates]
      operationId: createCertificates
      parameters:
        - name: certificates
          in: body
          required: true
          schema:
            $ref: '#/definitions/certificates'
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        201:
          description: Create a new certificate
          schema:
            $ref: '#/definitions/certificates'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /certificates/{id}:
    put:
      tags: [certificates]
      operationId: updateCertificates
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: certificates
          in: body
          schema:
            $ref: '#/definitions/certificates'
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/certificates'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    get:
      tags: [certificates]
      operationId: describeCertificates
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: Describe a single certificate
          schema:
            $ref: '#/definitions/certificates'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    delete:
      tags: [certificates]
      operationId: deleteCertificates
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        204:
          description: Deleted certificate
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /dns/aws:
    get:
      tags: [dns]
      operationId: listDnsAws
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 1
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: List the Domain Names
          schema:
            type: array
            items:
              $ref: '#/definitions/dns'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /dns/aws/arecord:
    get:
      tags: [dns]
      operationId: listARecords
      parameters:
        - name: HostedZoneID
          in: query
          type: string
          required: true
        - name: limit
          in: query
          type: integer
          format: int32
          default: 1
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: List the Domain Names
          schema:
            type: array
            items:
              $ref: '#/definitions/arecord'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /dns:
    get:
      tags: [dns]
      operationId: listDns
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 1
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: List the Domain Names
          schema:
            type: array
            items:
              $ref: '#/definitions/dns'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
    post:
      tags: [dns]
      operationId: createDns
      parameters:
        - name: dns
          in: body
          required: true
          schema:
            $ref: '#/definitions/dns'
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        201:
          description: Create a new DNS
          schema:
            $ref: '#/definitions/dns'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /dns/{id}:
    put:
      tags: [dns]
      operationId: updateDns
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: dns
          in: body
          schema:
            $ref: '#/definitions/dns'
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/dns'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    get:
      tags: [dns]
      operationId: describeDns
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: Describe a single DNS
          schema:
            $ref: '#/definitions/dns'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    delete:
      tags: [dns]
      operationId: deleteDns
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        204:
          description: Deleted DNS
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /arcedge_credentials:
    get:
      tags: [arcedgecredentials]
      operationId: listArcEdgeCredentials
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 1
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: List the ArcEdge Credentials
          schema:
            type: array
            items:
              $ref: '#/definitions/arcedgecredentials'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
    post:
      tags: [arcedgecredentials]
      operationId: createArcEdgeCredentials
      parameters:
        - name: arcedgecredentials
          in: body
          required: true
          schema:
            $ref: '#/definitions/arcedgecredentials'
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        201:
          description: Create a new ArcEdge Credential
          schema:
            $ref: '#/definitions/arcedgecredentials'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /arcedge_credentials/{id}:
    put:
      tags: [arcedgecredentials]
      operationId: updateArcEdgeCredentials
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: arcedgecredentials
          in: body
          schema:
            $ref: '#/definitions/arcedgecredentials'
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/arcedgecredentials'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    get:
      tags: [arcedgecredentials]
      operationId: describeArcEdgeCredentials
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: Describe a single ArcEdge Credential
          schema:
            $ref: '#/definitions/arcedgecredentials'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    delete:
      tags: [arcedgecredentials]
      operationId: deleteArcEdgeCredentials
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        204:
          description: Deleted credential
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /connections:
    get:
      tags: [connections]
      operationId: listConnections
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list the connections
          schema:
            type: array
            items:
              $ref: '#/definitions/connections'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
    post:
      tags: [connections]
      operationId: createConnections
      parameters:
        - name: connections
          in: body
          required: true
          schema:
            $ref: '#/definitions/connections'
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        201:
          description: Create a new connection
          schema:
            $ref: '#/definitions/connections'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /connections/{id}:
    put:
      tags: [connections]
      operationId: updateConnections
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: connections
          in: body
          schema:
            $ref: '#/definitions/connections'
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/connections'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    get:
      tags: [connections]
      operationId: describeConnections
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: Describe a single connection
          schema:
            $ref: '#/definitions/connections'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    delete:
      tags: [connections]
      operationId: deleteConnections
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        204:
          description: Deleted connection
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials:
    get:
      tags: [credentials]
      operationId: listCredentials
      parameters:
        - name: provider
          in: query
          type: string
          description: 'Provider'
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list the cloud credentials accounts
          schema:
            type: array
            items:
              $ref: '#/definitions/credentials'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
    post:
      tags: [credentials]
      operationId: createCredentials
      parameters:
        - name: credentials
          in: body
          required: true
          schema:
            $ref: '#/definitions/credentials'
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        201:
          description: Create a new cloud credential
          schema:
            $ref: '#/definitions/credentials'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/{id}:
    put:
      tags: [credentials]
      operationId: updateCredentials
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: credentials
          in: body
          schema:
            $ref: '#/definitions/credentials'
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/credentials'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    get:
      tags: [credentials]
      operationId: describeCredentials
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: Describe a single cloud account credential
          schema:
            $ref: '#/definitions/credentials'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    delete:
      tags: [credentials]
      operationId: deleteCredentials
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        204:
          description: Deleted cloud account credential
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /deployments:
    get:
      tags: [deployments]
      operationId: listDeployments
      parameters:
        - name: provider
          in: query
          type: string
          description: 'Provider'
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list the cloud deployments
          schema:
            type: array
            items:
              $ref: '#/definitions/deployment'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
    post:
      tags: [deployments]
      operationId: createDeployments
      parameters:
        - name: deployments
          in: body
          required: true
          schema:
            $ref: '#/definitions/deployment'
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/deployment'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/aws/byoips/{id}:
    get:
      tags: [credentials]
      operationId: getAwsByoips
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: region
          in: query
          type: string
          required: true
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: Get the unassociated Elastic IPs available in the region
          schema:
            type: array
            items:
              $ref: '#/definitions/byoip'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/aws/vpcs/{id}:
    get:
      tags: [credentials]
      operationId: getAwsVpc
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: region
          in: query
          type: string
          required: true
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list of the VPCs by the cloud provider
          schema:
            type: array
            items:
              $ref: '#/definitions/vpc'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/aws/keys/{id}:
    get:
      tags: [credentials]
      operationId: getAwsKeys
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: region
          in: query
          type: string
          required: true
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list of the instance types by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/aws/subnets/{id}:
    get:
      tags: [credentials]
      operationId: getAwsSubnets
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: region
          in: query
          type: string
          required: true
        - name: id
          in: path
          required: true
          type: string
        - name: vpc_id
          in: query
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list of the subnets by the cloud provider
          schema:
            type: array
            items:
              $ref: '#/definitions/subnet'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/aws/instance_types/{id}:
    get:
      tags: [credentials]
      operationId: getAwsInstanceTypes
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: region
          in: query
          type: string
          required: true
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list of the instance types by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/aws/regions/{id}:
    get:
      tags: [credentials]
      operationId: getAwsRegions
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list of the regions by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/azure/keys/{id}:
    get:
      tags: [credentials]
      operationId: getAzureKeys
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list of the instance types by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/azure/virtual_networks/{id}:
    get:
      tags: [credentials]
      operationId: getAzureVNet
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: resource_group
          in: query
          type: string
          required: true
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list of the virtual network by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/azure/byoips/{id}:
    get:
      tags: [credentials]
      operationId: getAzureByoips
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: resource_group
          in: query
          type: string
          required: true
        - name: region
          in: query
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list of unassociated Elastic IP's available
          schema:
            type: array
            items:
              $ref: '#/definitions/byoip'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/azure/resource_groups/{id}:
    get:
      tags: [credentials]
      operationId: getAzureResourceGroup
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: id
          in: path
          required: true
          type: string
        - name: region
          in: query
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list of the resource group by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/azure/subnets/{id}:
    get:
      tags: [credentials]
      operationId: getAzureSubnets
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: resource_group
          in: query
          type: string
          required: true
        - name: id
          in: path
          required: true
          type: string
        - name: virtual_network
          in: query
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list of the subnets by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/azure/instance_types/{id}:
    get:
      tags: [credentials]
      operationId: getAzureInstanceTypes
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: region
          in: query
          type: string
          required: true
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list of the instance types by the cloud provider
          schema:
            type: array
            items:
              $ref: '#/definitions/azure_instance_type'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/azure/regions/{id}:
    get:
      tags: [credentials]
      operationId: getAzureRegions
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list of the regions by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/gcp/projects/{id}:
    get:
      tags: [credentials]
      operationId: getGcpProject
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list of the GCP Projects
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/gcp/subnets/{id}:
    get:
      tags: [credentials]
      operationId: getGcpSubnets
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: region
          in: query
          type: string
          required: true
        - name: network
          in: query
          type: string
          required: true
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list of the subnets by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/gcp/byoips/{id}:
    get:
      tags: [credentials]
      operationId: getGcpByoips
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: region
          in: query
          type: string
          required: true
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list of the reserved IPs by the cloud provider
          schema:
            type: array
            items:
              $ref: '#/definitions/byoip'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/gcp/networks/{id}:
    get:
      tags: [credentials]
      operationId: getGcpNetworks
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list of the networks by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/gcp/instance_types/{id}:
    get:
      tags: [credentials]
      operationId: getGcpInstanceTypes
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: zone
          in: query
          type: string
          required: true
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list of the instance types by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/gcp/regions/{id}:
    get:
      tags: [credentials]
      operationId: getGcpRegions
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list of the regions by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/gcp/zones/{id}:
    get:
      tags: [credentials]
      operationId: getGcpZones
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: region
          in: query
          type: string
          required: true
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list of the zones by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /cloud_credentials/onpremise/data_if_names/{id}:
    get:
      tags: [credentials]
      operationId: getOnpremIfName
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list of the data interface name by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /deployments/{id}:
    put:
      tags: [deployments]
      operationId: updateDeployments
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: deployments
          in: body
          schema:
            $ref: '#/definitions/deployment'
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/deployment'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    get:
      tags: [deployments]
      operationId: describeDeployments
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: Describe a single cloud deployment
          schema:
            $ref: '#/definitions/deployment'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    delete:
      tags: [deployments]
      operationId: deleteDeployments
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        204:
          description: Deleted cloud deployment
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /deployments/{id}/logs:
    get:
      tags: [deployments]
      operationId: listLogs
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: list the all the terraform logs of given deployment
          schema:
            type: array
            items:
              $ref: '#/definitions/terraform_log'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /upgrade:
    put:
      tags: [maintenance]
      operationId: upgrade
      parameters: []
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/upgrade'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /upgrade/cancel:
    put:
      tags: [maintenance]
      operationId: upgradeCancel
      parameters: []
      security:
        - Bearer: []
      responses:
        200:
          description: OK
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /upgrade/available:
    get:
      tags: [maintenance]
      operationId: upgradeAvailable
      parameters: []
      security:
        - Bearer: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/upgrade_check'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
  /ttyd:
    get:
      tags: [ttyd]
      operationId: ttyd
      parameters:
        - name: id
          in: query
          required: true
          type: string
        - name: ip
          in: query
          required: true
          type: string
        - name: token
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: UI console
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /ttyd/token:
    get:
      tags: [ttyd]
      operationId: ttydtoken
      security:
        - Bearer: []
      responses:
        200:
          description: ttyd token
          schema:
            type: object
            properties:
              token:
                type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /ttyd/ws:
    get:
      tags: [ttyd]
      operationId: ttydws
      parameters:
        - name: id
          in: query
          required: true
          type: string
        - name: ip
          in: query
          required: true
          type: string
        - name: token
          in: query
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        200:
          description: ttyd websocket
          schema:
            type: object
            properties:
              token:
                type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /status:
    get:
      tags: [status]
      operationId: getStatus
      responses:
        200:
          description: UI console
          schema:
            $ref: '#/definitions/server_status'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /version:
    get:
      description: 'Returns version of ArcOrchestrator'
      tags: [version]
      operationId: getVersion
      responses:
        200:
          description: Version of ArcOrchestrator
          schema:
            $ref: '#/definitions/arcorch_version'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
definitions:
  Providers:
    type: string
    enum: &Providers
      - aws
      - gcp
      - azure
      - onpremise
  certificates:
    type: object
    required:
      - name
      - cert
    properties:
      id:
        type: string
        minLength: 1
      name:
        type: string
        minLength: 1
      cert:
        type: string
        minLength: 1
  dns:
    type: object
    required:
      - name
      - domainname
      - zoneid
    properties:
      id:
        type: string
        minLength: 1
      name:
        type: string
        minLength: 1
      domainname:
        type: string
        minLength: 1
      zoneid:
        type: string
        minLength: 1
      credential_id:
        type: string
  arecord:
    type: object
    properties:
      id:
        type: string
        minLength: 1
      name:
        type: string
        minLength: 1
      value:
        type: array
        items:
          type: string
  arcedgecredentials:
    type: object
    required:
      - username
      - password
    properties:
      id:
        type: string
        minLength: 1
      username:
        type: string
        minLength: 1
      password:
        type: string
        minLength: 1
  connections:
    type: object
    required:
      - name
      - deployment1
      - deployment2
    properties:
      id:
        type: string
        minLength: 1
      name:
        type: string
        minLength: 1
      deployment1:
        $ref: '#/definitions/components'
      deployment2:
        $ref: '#/definitions/components'
  components:
    type: object
    required:
      - deploymentid
      - type
    properties:
      deploymentid:
        type: string
        minLength: 1
      type:
        $ref: '#/definitions/componentTypes'
  componentTypes:
    type: string
    enum: &componentTypes
      - HUB
      - SPOKE
      - HUB & SPOKE
  credentials:
    type: object
    required:
      - name
      - provider
      - credentials
    properties:
      id:
        type: string
        minLength: 1
      name:
        type: string
        minLength: 1
      provider:
        $ref: '#/definitions/Providers'
      credentials:
        allOf:
          - $ref: '#/definitions/aws_credentials'
          - $ref: '#/definitions/azure_credentials'
          - $ref: '#/definitions/gcp_credentials'
          - $ref: '#/definitions/onprem_credentials'
      numdeployments:
        type: integer
        x-omitempty: false
  deployment:
    type: object
    required:
      - credentials
      - name
    properties:
      id:
        type: string
        minLength: 1
      name:
        type: string
        minLength: 1
      credentials_id:
        type: string
        minLength: 1
      enable_high_availability:
        type: boolean
      enable_private_subnet:
        type: boolean
      arc_orch_ip:
        type: string
        minLength: 1
      action:
        type: string
      status:
        type: string
      statusID:
        type: integer
      activeIP:
        type: string
      activeIPGateway:
        type: string
      activePrivateIP:
        type: string
      backupIP:
        type: string
      backupPrivateIP:
        type: string
      privateCidr:
        type: string
      ingressSg:
        type: string
      hubNumber:
        type: integer
      coordinates:
        $ref: '#/definitions/coordinates'
      aws_deployment:
        $ref: '#/definitions/aws_deployment'
      azure_deployment:
        $ref: '#/definitions/azure_deployment'
      gcp_deployment:
        $ref: '#/definitions/gcp_deployment'
      onprem_deployment:
        $ref: '#/definitions/onprem_deployment'
      provider:
        $ref: '#/definitions/Providers'
      credentials:
        allOf:
          - $ref: '#/definitions/aws_credentials'
          - $ref: '#/definitions/azure_credentials'
          - $ref: '#/definitions/gcp_credentials'
          - $ref: '#/definitions/onprem_credentials'
  aws_credentials:
    type: object
    properties:
      id:
        type: string
        minLength: 1
      access_key:
        type: string
        minLength: 8
      secret_key:
        type: string
        minLength: 8
  azure_credentials:
    type: object
    properties:
      id:
        type: string
        minLength: 1
      subscription_id:
        type: string
        minLength: 8
      client_id:
        type: string
        minLength: 8
      client_secret:
        type: string
        minLength: 8
      tenant_id:
        type: string
        minLength: 8
  gcp_credentials:
    type: object
    properties:
      id:
        type: string
        minLength: 1
      type:
        type: string
        minLength: 1
      project_id:
        type: string
        minLength: 1
      private_key_id:
        type: string
        minLength: 1
      private_key:
        type: string
        minLength: 1
      client_email:
        type: string
        minLength: 1
      clientId:
        type: string
        minLength: 1
      auth_uri:
        type: string
        minLength: 1
      token_uri:
        type: string
        minLength: 1
      auth_provider_x509_cert_url:
        type: string
        minLength: 1
      client_x509_cert_url:
        type: string
        minLength: 1
  onprem_credentials:
    type: object
    properties:
      id:
        type: string
        minLength: 1
      server_ip:
        type: string
        minLength: 1
      use_pvt_ip:
        type: boolean
        default: true
      user_name:
        type: string
        minLength: 1
      ssh_key:
        type: string
        minLength: 1
      data_if_name:
        type: array
        items: 
          type: string
      site_address:
        type: string
      coordinates:
        $ref: '#/definitions/coordinates'
  subnet:
    type: object
    required:
      - subnet_id
      - tags
    properties:
      arn:
        type: string
        minLength: 1
      subnet_id:
        type: string
        minLength: 1
      tags:
        type: array
        items:
          $ref: '#/definitions/tag'
  tag:
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
        minLength: 1
      value:
        type: string
        minLength: 1
  byoip:
    type: object
    required:
      - eip
      - tags
    properties:
      eip:
        type: string
        minLength: 1
      tags:
        type: array
        items:
          $ref: '#/definitions/tag'
  vpc:
    type: object
    required:
      - vpc_id
      - tags
    properties:
      vpc_id:
        type: string
        minLength: 1
      tags:
        type: array
        items:
          $ref: '#/definitions/tag'
  login_request:
    type: object
    required:
      - tenant
      - username
      - password
    properties:
      tenant:
        type: string
        minLength: 1
      username:
        type: string
        minLength: 1
      password:
        type: string
        minLength: 1
  login_response:
    type: object
    required:
      - access_token
      - refresh_token
    properties:
      access_token:
        type: string
        minLength: 1
      refresh_token:
        type: string
        minLength: 1
  password_change_request:
    type: object
    required:
      - userlogin
      - newpassword
    properties:
      userlogin:
        $ref: '#/definitions/login_request'
      newpassword:
        type: string
        minLength: 1
  password_change_response:
    type: object
    required:
      - user
    properties:
      user:
        $ref: '#/definitions/user'

  success_response:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
  user:
    type: object
    required:
      - name
      - username
      - password
      - email
      - roles
    properties:
      id:
        type: string
        minLength: 1
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
      name:
        type: string
        minLength: 1
      username:
        type: string
        minLength: 1        
      password:
        type: string
      email:
        type: string
        minLength: 1
      is_default:
        type: boolean
        readOnly: true
        x-omitempty: false
      is_default_password:
        type: boolean
        readOnly: true
        x-omitempty: false
      roles:  
        type: array
        items: {$ref: '#/definitions/rolename'}

  coordinates:
    type: object
    required:
      - lat
      - long
    properties:
      lat:
        type: number
      long:
        type: number
  aws_deployment:
    type: object
    properties:
      instance_key:
        type: string
        minLength: 1
      region:
        type: string
        minLength: 1
      byoip:
        type: string
        minLength: 1
      vpc_id:
        type: string
        minLength: 1
      instance_type:
        type: string
        minLength: 1
      public_subnet:
        type: string
        minLength: 1
      private_subnet:
        type: string
        minLength: 1
      private_subnet_route_table:
        type: string
        minLength: 1
  azure_deployment:
    type: object
    properties:
      resource_group:
        type: string
        minLength: 1
      instance_key:
        $ref: '#/definitions/instance_key'
      region:
        type: string
        minLength: 1
      vnet:
        type: string
        minLength: 1
      byoip:
        type: string
        minLength: 1
      enable_accelerated_networking:
        type: boolean
      accelerated_networking_enabled:
        type: boolean
      instance_type:
        type: string
        minLength: 1
      public_subnet:
        type: string
        minLength: 1
      private_subnet:
        type: string
        minLength: 1
  gcp_deployment:
    type: object
    properties:
      credentials_id:
        type: string
        minLength: 1
      instance_key:
        $ref: '#/definitions/instance_key'
      arc_orch_ip:
        type: string
        minLength: 1
      region:
        type: string
        minLength: 1
      zone:
        type: string
        minLength: 1
      byoip:
        type: string
        minLength: 1
      public_network:
        type: string
        minLength: 1
      public_subnet:
        type: string
        minLength: 1
      private_network:
        type: string
        minLength: 1
      private_subnet:
        type: string
        minLength: 1
      instance_type:
        type: string
        minLength: 1
  onprem_deployment:
    type: object
    properties:
      base_image:
        type: string
        minLength: 1
      vm_count:
        type: integer
      vcpus:
        type: integer
      vm_memory:
        type: integer
      use_pvt_ip:
        type: boolean
        readOnly: true
        default: true
      private_ip:
        type: string
        minLength: 1
      public_ip:
        type: string
        minLength: 1
      vlan_list:
        type: array
        items:
          type: string
      prefix:
        type: string
      ssh_psw:
        type: string
      subnet_mask:
        type: integer 
      default_gw:
        type: string
        minLength: 1
  azure_instance_type:
    type: object
    required:
      - name
      - accelerated_networking_enabled
    properties:
      name:
        type: string
      accelerated_networking_enabled:
        type: boolean
  instance_key:
    type: object
    required:
      - name
    properties:
      name:
        type: string
      content:
        type: string
  tenant:
    type: object
    required:
      - name
      - defaultuser
      - domain
    properties:
      id:
        type: string
        minLength: 1
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
      name:
        type: string
        minLength: 1
      organization:
        type: string
        minLength: 1
      domain:  
        type: string
        minLength: 1
      defaultuser:
        $ref: '#/definitions/user' 
      numdeployments:
        type: integer
        readOnly: true
        x-omitempty: false
      numconnections:
        type: integer
        readOnly: true
        x-omitempty: false
      is_default:
        type: boolean
        readOnly: true
        x-omitempty: false
  terraform_log:
    type: object
    properties:
      id:
        type: string
      deployment_id:
        type: string
        minLength: 1
      time:
        type: string
        minLength: 1
      operation:
        type: string
      initiator:
        type: string
      log:
        type: string
        readOnly: true

  permission:
    type : object
    additionalProperties:
      $ref: '#/definitions/access'

  role:
    type: object
    required:
      - name
      - resourceperms
    properties:
      id:
        type: string
        minLength: 1
      name:
        $ref: '#/definitions/rolename'
      resourceperms:
        type: array
        items: {$ref: '#/definitions/permission'}
  rolename:
    type: string
    enum: [ArcOrchAdmin, TenantAdmin,TenantOperator]
  access:
    type: string
    enum: [r, rw]
  resource:
    type: string
    enum: [tenants,users,cloud_credentials,deployments,connections,arcedge_credentials,certificates,dns,upgrade]
  arcorch_version:
    type: object
    properties:
      version:
        type: string
      platform:
        type: string
  error:
    type: object
    required:
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
  upgrade_check:
    type: object
    required:
      - available
    properties:
      available:
        type: boolean
      currentVersion:
        type: string
      currentImage:
        type: string
      latestVersion:
        type: string
      latestImage:
        type: string
  upgrade:
    type: object
    required:
      - status
    properties:
      status:
        type: boolean
      statusMessage:
        type: string
      currentVersion:
        type: string
      currentImageName:
        type: string
      currentImageId:
        type: string
      latestVersion:
        type: string
      latestImageName:
        type: string
      latestImageId:
        type: string
  server_status:
    type: object
    properties:
      status:
        type: string
        enum: [running, upgrading]